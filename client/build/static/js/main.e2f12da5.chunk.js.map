{"version":3,"sources":["layout/Navbar.js","components/ProductList.js","components/ProductDetail.js","components/ProductCart.js","components/OrderStatus.js","index.js"],"names":["Navbar","Nav","className","Container","to","Button","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","ProductList","state","products","axios","get","then","response","data","setState","catch","error","console","log","this","Row","map","product","index","key","src","imgUrl","alt","name","description","price","toFixed","urlId","Component","ProductDetail","props","match","params","quantity","handleChange","bind","handleClick","e","value","target","post","res","history","push","htmlFor","defaultValue","onChange","onClick","ProductCart","orders","handlePayment","handleRemove","cancelOrder","total","forEach","order","items","qty","preventDefault","delete","window","location","reload","swalWithBootstrapButtons","Swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","result","totalPrice","hasOrder","length","style","width","data-th","status","disabled","colSpan","OrderStatus","confirmedOrder","setTimeout","changeToDelivered","reverse","orderName","item","App","exact","path","component","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2f12da5.chunk.js","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\nimport { Container, Nav, Button } from \"react-bootstrap\";\n\nexport const Navbar = () => {\n  return (\n    <Nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <Container>\n        <Link className=\"navbar-brand\" to=\"/\">\n          Online Funko Pop\n        </Link>\n        <Button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </Button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <NavLink activeClassName='active' className=\"nav-link\" to=\"/\">\n                Home\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink activeClassName='active' className=\"nav-link\" to=\"/my-order\">\n                My Order\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink activeClassName='active' className=\"nav-link\" to=\"/order-status\">\n                Order Status\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </Container>\n    </Nav>\n  );\n};\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport { Container, Row, Button } from \"react-bootstrap\";\n// import uniqid from \"uniqid\";\n// const id = uniqid('user-');\n// const user = localStorage.setItem('currentUser', id);\n\nclass ProductList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      products: [],\n    };\n  }\n\n  componentDidMount() {\n    // Axios GET\n    axios\n      .get(\"/api/products\")\n      .then((response) => {\n        const products = response.data;\n        this.setState({\n          products: products,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    const products = this.state.products;\n    return (\n      <Container>\n        <br />\n        <h1 className=\"mt-3\">Products</h1>\n        <Row>\n          {products\n            ? products.map((product, index) => (\n                <div className=\"col-4\" key={index}>\n                  <div className=\"card\">\n                    <img\n                      className=\"card-img product-img\"\n                      src={product.imgUrl}\n                      alt={product.name}\n                    />\n                    <div className=\"card-body\">\n                      <h4 className=\"card-title\">{product.name}</h4>\n                      <p className=\"card-text\">{product.description}</p>\n                      <div className=\"buy d-flex justify-content-between align-items-center\">\n                        <div className=\"price text-success\">\n                          <h4 className=\"mt-4\">RM{product.price.toFixed(2)}</h4>\n                        </div>\n                        <Link to={`/productInfo/${product.urlId}`}>\n                          <Button className=\"btn btn-dark mt-3\">\n                            Create Order\n                          </Button>\n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))\n            : null}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default ProductList;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Container, Button } from \"react-bootstrap\";\n\nclass ProductDetail extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      product: [],\n      id: props.match.params.id,\n      quantity: 1\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(`/api/products/${this.state.id}`)\n      .then((response) => {\n        const product = response.data;\n        this.setState({\n          product: product,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  handleChange(e) {\n    const value = e.target.value;\n    this.setState({\n      quantity: value,\n    });\n  }\n\n  handleClick(e) {\n    const product = this.state.product;\n    const quantity = this.state.quantity;\n    axios.post(\"/api/order\", { product, quantity }).then((res) => {\n      console.log(\"👉 Returned data:\", res.data);\n      this.props.history.push(`/my-order`);\n    });\n  }\n\n  render() {\n    const product = this.state.product;\n    return (\n      <div>\n        <Container>\n          <br />\n          <div className=\"card mb-3\">\n            <div className=\"row no-gutters\">\n              <div className=\"col-4\">\n                <img\n                  src={product.imgUrl}\n                  className=\"card-img\"\n                  alt={product.name}\n                />\n              </div>\n              <div className=\"card-body d-flex flex-column\">\n                <h5 className=\"card-title\">{product.name}</h5>\n                <p className=\"card-text\">{product.description}</p>\n                <p className=\"card-text\">\n                  <span className=\"badge badge-dark\">{product.price}</span>\n                </p>\n                <div className=\"form-group row\">\n                  <label\n                    htmlFor=\"example-number-input\"\n                    className=\"col-2 col-form-label\"\n                  >\n                    Quantity\n                  </label>\n                  <div className=\"col-10\">\n                    <input\n                      className=\"form-control\"\n                      type=\"number\"\n                      defaultValue=\"1\"\n                      onChange={this.handleChange.bind(this)}\n                      id=\"example-number-input\"\n                    />\n                  </div>\n                </div>\n                <Button onClick={this.handleClick} className=\"align-self-end mt-auto btn btn-lg btn-block btn-dark\">\n                  Order\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ProductDetail;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\nimport { Container, Button } from \"react-bootstrap\";\n\nclass ProductCart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      orders: [],\n      price: 0.0,\n    };\n    this.handlePayment = this.handlePayment.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.cancelOrder = this.cancelOrder.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(`/api/orders`)\n      .then((response) => {\n        const orders = response.data;\n        var total = 0;\n        orders.forEach((order) => {\n          total = total + order.items[0].price * order.items[0].qty;\n        });\n        console.log(total);\n        this.setState({\n          orders: orders,\n          price: total.toFixed(2),\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  cancelOrder(e) {\n    e.preventDefault();\n    axios.delete(\"/api/cancelOrder\").then(() => {\n      window.location.reload(false);\n    });\n  }\n\n  handleRemove(e, order) {\n    e.preventDefault();\n    axios.delete(\"/api/order\", { data: { urlId: order.urlId } }).then(() => {\n      window.location.reload(false);\n    });\n  }\n\n  handlePayment(e) {\n    e.preventDefault();\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: \"btn btn-success\",\n        cancelButton: \"btn btn-danger\",\n      },\n      buttonsStyling: false,\n    });\n\n    swalWithBootstrapButtons\n      .fire({\n        title: \"Proceed to payment?\",\n        text: \"You won't be able to revert this!\",\n        icon: \"info\",\n        showCancelButton: true,\n        confirmButtonText: \"Proceed\",\n        cancelButtonText: \"Cancel\",\n        reverseButtons: true,\n      })\n      .then((result) => {\n        axios\n          .get(`/payment/process/`)\n          .then((response) => {\n            if (response.data === \"Successful\") {\n              const orders = this.state.orders;\n              const totalPrice = this.state.price;\n              axios\n                .post(\"/api/orderConfirmed\", { orders, totalPrice })\n                .then((res) => {\n                  console.log(\"👉 Returned data:\", res.data);\n                  this.props.history.push(`/order-status`);\n                })\n                .then(() => {\n                  axios.delete(\"/api/cancelOrder\");\n                })\n                .then(() => {\n                  swalWithBootstrapButtons.fire(\n                    \"Successful!\",\n                    \"Your payment has been successful!\",\n                    \"success\"\n                  );\n                });\n            } else {\n              swalWithBootstrapButtons.fire(\n                \"Uh-oh!\",\n                \"We are not able to process your payment.\",\n                \"error\"\n              );\n            }\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      });\n  }\n\n  render() {\n    const orders = this.state.orders;\n    const hasOrder = orders.length > 0;\n    return (\n      <Container>\n        <table id=\"cart\" className=\"table table-hover table-condensed\">\n          <thead>\n            <tr>\n              <th>Product</th>\n              <th>Price</th>\n              <th style={{ width: \"1%\" }} className=\"text-center\">\n                Quantity\n              </th>\n              <th style={{ width: \"8%\" }} className=\"text-center\">\n                Status\n              </th>\n              <th style={{ width: \"15%\" }}></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders\n              ? orders.map((order, index) => (\n                  <tr key={index}>\n                    <td data-th=\"Product\">\n                      <div className=\"row\">\n                        <div className=\"col-sm-2 hidden-xs\">\n                          <img\n                            src={order.items[0].imgUrl}\n                            alt={order.items[0].name}\n                            className=\"img-responsive\"\n                          />\n                        </div>\n                        <div className=\"col-sm-10\">\n                          <h4 className=\"margin-left-10\">\n                            {order.items[0].name}\n                          </h4>\n                          <p className=\"margin-left-10\">\n                            {order.items[0].description}\n                          </p>\n                        </div>\n                      </div>\n                    </td>\n                    <td data-th=\"Price\">RM {order.items[0].price}</td>\n                    <td data-th=\"Quantity\" className=\"text-center\">\n                      {/* <input\n                        type=\"number\"\n                        className=\"form-control text-center\"\n                        defaultValue={order.items[0].qty}\n                      /> */}\n                      {order.items[0].qty}\n                    </td>\n                    <td data-th=\"Status\" className=\"text-center\">\n                      {order.status}\n                    </td>\n                    <td className=\"actions text-center\" data-th=\"\">\n                      <Button\n                        type=\"submit\"\n                        onClick={(e) => this.handleRemove(e, order)}\n                        className=\"btn btn-danger btn-sm\"\n                      >\n                        Remove\n                      </Button>\n                    </td>\n                  </tr>\n                ))\n              : null}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td>\n                <Button\n                  onClick={(e) => this.cancelOrder(e)}\n                  className=\"btn btn-warning\"\n                  disabled={!hasOrder}\n                >\n                  Cancel Order\n                </Button>\n              </td>\n              <td colSpan=\"2\" className=\"hidden-xs\"></td>\n              <td className=\"hidden-xs text-center\">\n                <strong>Total RM{this.state.price}</strong>\n              </td>\n              <td>\n                <Button\n                  onClick={(e) => this.handlePayment(e)}\n                  className=\"btn btn-success btn-block\"\n                  disabled={!hasOrder}\n                >\n                  Confirm Order\n                </Button>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </Container>\n    );\n  }\n}\n\nexport default ProductCart;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Row, Container } from \"react-bootstrap\";\n\nclass OrderStatus extends Component {\n  constructor() {\n    super();\n    this.state = {\n      confirmedOrder: [],\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(`/api/confirmedOrdersList`)\n      .then((response) => {\n        const confirmedOrder = response.data;\n        this.setState({\n          confirmedOrder: confirmedOrder,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  changeToDelivered() {\n    axios.post(\"/api/changeDeliveredStatus\");\n  }\n\n  render() {\n    const confirmedOrder = this.state.confirmedOrder;\n    return (\n      <Container>\n        <p className=\"hidden\">{setTimeout(this.changeToDelivered, 5000)}</p>\n        <h1 className=\"mt-3\">Your Order Status</h1>\n        <Row>\n          {confirmedOrder\n            ? confirmedOrder.reverse().map((order, index) => (\n                <div className=\"col-12 mt-3\" key={index}>\n                  <div className=\"card overflow-hidden\">\n                    <div className=\"card-content\">\n                      <div className=\"card-body cleartfix\">\n                        <div className=\"media align-items-stretch\">\n                          <div className=\"media-body\">\n                            <h4>{order.orderName}</h4>\n                            <span>Tracking code: {order.urlId}</span>\n                            <h5 className=\"mt-3\">Ordered item: </h5>\n                            <ul>\n                              {order.items.map((item, index) => (\n                                <li key={index}>\n                                  {item.items[0].name} x{item.items[0].qty}\n                                </li>\n                              ))}\n                            </ul>\n                          </div>\n                          <div className=\"align-self-center\">\n                            <h1>RM{order.totalPrice.toFixed(2)}</h1>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"card-footer\">\n                        <div className=\"align-self-center justify-content-center\">\n                          <div className=\"col-12 hh-grayBox pt45 pb20\">\n                            <div className=\"row justify-content-between\">\n                              <div className=\"order-tracking completed\">\n                                <span className=\"is-complete\"></span>\n                                <p>Ordered</p>\n                              </div>\n                              <div className=\"order-tracking completed\">\n                                <span className=\"is-complete\"></span>\n                                <p>Shipped</p>\n                              </div>\n                              {order.status === \"shipped\" ? (\n                                <div className=\"order-tracking\">\n                                  <span className=\"is-complete\"></span>\n                                  <p>Delivered</p>\n                                </div>\n                              ) : (\n                                <div className=\"order-tracking completed\">\n                                  <span className=\"is-complete\"></span>\n                                  <p>Delivered</p>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))\n            : null}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default OrderStatus;\n","import React, { Component, Fragment } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\n\nimport { Navbar } from \"./layout/Navbar\";\nimport ProductList from \"./components/ProductList\";\nimport ProductDetail from \"./components/ProductDetail\";\nimport ProductCart from \"./components/ProductCart\";\nimport OrderStatus from \"./components/OrderStatus\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"Online Order App\",\n    };\n  }\n\n  render() {\n    return (\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path=\"/\" component={ProductList} />\n          <Route exact path=\"/productInfo/:id\" component={ProductDetail} />\n          <Route exact path=\"/my-order/\" component={ProductCart} />\n          <Route exact path=\"/order-status/\" component={OrderStatus} />\n        </Fragment>\n      </Router>\n    );\n  }\n}\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}